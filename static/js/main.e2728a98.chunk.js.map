{"version":3,"sources":["components/ColoredMessage.jsx","App.jsx","index.js"],"names":["ColoredMessage","props","console","log","color","children","contentStyle","fontSize","style","App","useState","num","setNum","useEffect","alert","onClick","ReactDOM","render","document","getElementById"],"mappings":"+IACaA,EAAiB,SAACC,GAC7BC,QAAQC,IAAIF,GAEZ,IAAQG,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAETC,EAAe,CACnBF,QACAG,SAAU,QAGZ,OAAO,mBAAGC,MAAOF,EAAV,SAAyBD,KCNrBI,EAAM,WAEjB,MAAsBC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAEAC,qBAAU,WACRC,UACC,CAACH,IAMJ,OACE,eAAC,WAAD,WACGT,QAAQC,IAAI,QACb,oBAAIK,MAAO,CAAEJ,MAAO,OAApB,kDACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAgBA,MAAM,OAAtB,kGACA,cAAC,EAAD,CAAgBA,MAAM,OAAtB,wDACA,wBAAQW,QAXU,WACpBH,EAAOD,EAAM,IAUX,gCACA,4BAAIA,QCtBVK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e2728a98.chunk.js","sourcesContent":["//色とテキストをPropsとして受け取って色つきの文字を返すコンポーネント\r\nexport const ColoredMessage = (props) => {\r\n  console.log(props);\r\n  //Propsを分割代入\r\n  const { color, children } = props;\r\n\r\n  const contentStyle = {\r\n    color, //省略記法\r\n    fontSize: \"20px\"\r\n  };\r\n\r\n  return <p style={contentStyle}>{children}</p>;\r\n};\r\n","import { Fragment } from \"react\";\r\nimport { ColoredMessage } from \"./components/ColoredMessage\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const App = () => {\r\n  //Stateの定義\r\n  const [num, setNum] = useState(0);\r\n\r\n  useEffect(() => {\r\n    alert();\r\n  }, [num]);\r\n\r\n  const onClickButton = () => {\r\n    setNum(num + 1);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {console.log(\"Test\")}\r\n      <h1 style={{ color: \"red\" }}>こんにちは！</h1>\r\n      <ColoredMessage />\r\n      <ColoredMessage color=\"blue\">がたがたぬかしてんじゃねぇよ</ColoredMessage>\r\n      <ColoredMessage color=\"pink\">元気ですねｗｗ</ColoredMessage>\r\n      <button onClick={onClickButton}>ボタン</button>\r\n      <p>{num}</p>\r\n    </Fragment>\r\n  );\r\n};\r\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}